name: Docker Image CI/CD

on:
  push:
    branches:
      - "*"
    paths:
      - ".github/workflows/docker-build.yml"
      - "server/service/user/**"
      - "server/service/actions/**"
      - "server/common/**"

jobs:
  build:
    runs-on: ubuntu-latest
    # if: ${{ github.event.paths && contains(github.event.paths, 'server/service/actions/**') }}

    steps:
      - env:
          EVENT_CONTEXT: ${{ toJSON(github.event) }}
        run: |
          echo $EVENT_CONTEXT
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get branch name
        id: branch_name
        run: echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})"

      - name: Get Changed Files
        id: get_changed_files
        run: |
          changed_files=$(git diff-tree --no-commit-id --name-only -r HEAD)
          git diff-tree --no-commit-id --name-only -r HEAD  
          changed_files="${changed_files//'\n'/','}" # 将换行符替换为逗号  
          echo "::set-output name=changed_files::$changed_files"
      - name: Get modified files
        id: get_modified_files
        run: echo "::set-output name=modified_files::$(git diff-tree --no-commit-id --name-only -r HEAD)"

      - name: Get changed files
        id: changed_files
        run: |
          # 获取最后一次提交的哈希值  
          last_commit_hash=$(git rev-parse HEAD)  
          echo "last_commit_hash $last_commit_hash"  
          # 获取上一次提交的哈希值  
          previous_commit_hash=$(git rev-parse HEAD^) 
          echo "previous_commit_hash $previous_commit_hash"  
          # 使用git diff获取更改的文件列表  
          changed_files=$(git diff --name-only $previous_commit_hash $last_commit_hash)
          echo "$last_commit_hash $previous_commit_hash $ changed_files"  
          # 将更改的文件列表保存到输出参数中  
          echo "::set-output name=changed_files::$changed_files"

      - name: Use changed files
        run: |
          # 获取上一步骤的输出参数  
          changed_files=${{ steps.changed_files.outputs.changed_files }}  
          # 在这里使用更改的文件列表进行后续操作  
          echo "Changed files are: $changed_files"

      - name: Print Changed File Paths
        run: |
          echo "${{ steps.get_modified_files.outputs.modified_files }}"
          echo "Changed File Paths: ${{ steps.get_changed_files.outputs.changed_files }}"

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image for service user
        # if: contains(github.event.pushed_paths, 'server/service/user')
        run: |
          service_name='user'
          image_name=qiji-${service_name}-test
          new_version=$(./version_upgrade.sh ${{ steps.branch_name.outputs.branch }} $image_name)

          echo "build user service"

          echo "Service ${service_name} image tag: $new_version"

      - name: Build and push Docker image for service github-actions-test
        # if: contains(github.event.pushed_paths, 'server/service/actions/index.html')
        run: |
          service_name='github-actions-test'
          image_name=github-actions-test
          new_version=$(./version_upgrade.sh ${{ steps.branch_name.outputs.branch }} $image_name)

          echo "build actions service"

          echo "Service ${service_name} image tag: $new_version"
