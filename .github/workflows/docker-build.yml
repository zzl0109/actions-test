name: Docker Image CI/CD

on:
  push:
    branches:
      - "*"
    paths:
      - ".github/workflows/docker-build.yml"
      - "server/service/user/**"
      - "server/service/actions/**"
      - "server/common/**"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - env:
          EVENT_CONTEXT: ${{ toJSON(github.event) }}
        run: |
          echo $EVENT_CONTEXT

      - name: Load environment variables
        uses: actions/load-env@v2
        with:
          file: ./.github/.env

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Get branch name
        id: branch_name
        run: |
          echo "current_pushed_branch=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_OUTPUT 
          echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})"

      - name: Get changed files
        id: changed_files
        run: |
          changed_files=$(git diff-tree --no-commit-id --name-only -r HEAD | tr '\n' ',')
          echo "changed_files $changed_files"
          echo "changed_files=$changed_files" >> $GITHUB_OUTPUT 
          echo "::set-output name=changed_files::$changed_files"

      - name: Print changed files
        run: |
          echo "${{ env.changed_files }}"
          echo "${{ steps.changed_files.outputs.changed_files }}"

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image for service user
        # 只当目标service的代码或者common、utils下的代码变更才会执行该步骤
        if: "contains(steps.changed_files.outputs.changed_files, 'server/service/user/') || contains(steps.changed_files.outputs.changed_files, 'server/service/utils/') || contains(steps.changed_files.outputs.changed_files, 'server/service/common/') || contains(steps.changed_files.outputs.changed_files, '.github/workflows/docker-build.yml')"
        run: |
          service_name='user'
          image_name=qiji-$service_name-cicd-test
          dockerfile_path=server/service/$service_name/Dockerfile
          new_version=$(./version_upgrade.sh ${{ steps.branch_name.outputs.branch }} $image_name)

          echo "branch name ${{ env.current_pushed_branch }}"

          echo "build $service_name service"
          echo "image name is $image_name"
          echo "dockerfile_path is $dockerfile_path"

          echo "Service ${service_name} image tag: $new_version"

      - name: Build and push Docker image for service github-actions-test
        # 只当目标service的代码或者common、utils下的代码变更才会执行该步骤
        if: "contains(steps.changed_files.outputs.changed_files, 'server/service/actions/') || contains(steps.changed_files.outputs.changed_files, 'server/service/utils/') || contains(steps.changed_files.outputs.changed_files, 'server/service/common/') || contains(steps.changed_files.outputs.changed_files, '.github/workflows/docker-build.yml')"
        run: |
          service_name='actions'
          image_name=qiji-$service_name-cicd-test
          dockerfile_path=server/service/$service_name/Dockerfile
          new_version=$(./version_upgrade.sh ${{ steps.branch_name.outputs.branch }} $image_name)

          echo "build $service_name service"
          echo "image name is $image_name"
          echo "dockerfile_path is $dockerfile_path"

          echo "Service ${service_name} image tag: $new_version"
